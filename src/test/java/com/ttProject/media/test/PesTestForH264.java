package com.ttProject.media.test;

/**
 * h264のデータをmpegtsのpesにいれる方法を研究しておく。
 * 
 * とりあえず解析をすすめていく。
 * やったこと
 * marioのデータから、h.264のみのflvとmpegtsを作成。
 * 
 * 各nalデータを抜き出してflvのtimestampとmpegtsのpcr ptsと内包nalデータについて抜き出してみた。
 * 
 * ts:0
 * pcr:5000007B0C7E00 (63000)
 * pts:210007D861 (126000) [63000 / 0.7]
 * 09 aud(きっているデータ)
 * 67 sps
 * 68 pps
 * 65 keyFrame
 * 
 * ts:21 [33]
 * pcr:なし
 * pts:210007EF95 (128970) [65970 / 0.733]
 * 09
 * 41 slice
 * 
 * ts:43 [67]
 * pcr:なし
 * pts:210009077D (132030) [69030 / 0.767]
 * 09
 * 41
 * 
 * ts:64 [100]
 * pcr:なし
 * pts:2100091EB1 (135000) [72000 / 0.8]
 * 09
 * 41
 * 
 * あってるね・・・
 * ts:85
 * pcr:
 * pts:21000935E5
 * 09
 * 41
 * 
 * ....
 * ts:7B1
 * pcr:5000032F197E00 (417330) [4.637]
 * pts:21001DA895 (480330) [417330 / 4.637]
 * 09
 * 67
 * 68
 * 65
 * 
 * どうやらdtsはないっぽい。
 * また、09 41の組み合わせの各innerFrameと09 67 68 65の組み合わせのkeyFrameから成るっぽい。
 * なぜか63000ずれているのは仕様だと思われます。ffmpeg依存？
 * flvの時間と一致しているので、flv→mpegtsの変換ならうまくできそうな感じ。
 * 
 * mpegtsの仕様からするとbframeを含めたh.264の場合はもうちょっとなんとかする必要があるみたいです。
 * とりあえず、そういうサンプルが手元にないのでスルーしておきます。
 * 
 * @author taktod
 */
public class PesTestForH264 {

}
